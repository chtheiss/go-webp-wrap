version: 2
jobs:
  build:
    working_directory: /go/src/github/chtheiss/go-webp-wrap
    docker:
      - image: golang
    steps:
      - checkout
      - run: go get -t -v ./...
      - run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...
      - run: curl -s https://codecov.io/bash | bash
      - run: |
          curl -u ${CIRCLE_API_TOKEN}: -d build_parameters[CIRCLE_JOB]=build_alpine https://circleci.com/api/v1.1/project/github/chtheiss/go-webp-wrap/tree/master
          curl -u ${CIRCLE_API_TOKEN}: -d build_parameters[CIRCLE_JOB]=build_arm https://circleci.com/api/v1.1/project/github/chtheiss/go-webp-wrap/tree/master
  build_alpine:
    working_directory: /go/src/github/chtheiss/go-webp-wrap
    docker:
     - image: golang:alpine
    steps:
     - run: apk add --no-cache --update libpng-dev libjpeg-turbo-dev giflib-dev tiff-dev autoconf automake make g++ wget git
     - run: |
        wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.5.0.tar.gz
        tar -xvzf libwebp-1.5.0.tar.gz
        mv libwebp-1.5.0 libwebp
        rm libwebp-1.5.0.tar.gz
        cd libwebp
        ./configure
        make
        make install
        cd ..
        rm -rf libwebp
     - checkout
     - run: go get -t -v ./...
     - run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...
  build_arm:
    working_directory: ~/project
    machine: true
    steps:
      - run: sudo apt-get update && sudo apt-get install -y git-core apt-transport-https ca-certificates curl software-properties-common
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      - run: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      - run: sudo apt-get update && sudo apt-get install -y docker-ce
      - checkout
      - run: sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - run: sudo docker build -t test-image -f docker/Dockerfile.arm .
